<?xml version='1.0' encoding='utf-8' ?>

<!DOCTYPE section PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Ardour_Notes.ent">
%BOOK_ENTITIES;
]>

<section id="sect-Documentation-Ardour_Book-TODO_Chapter-TODO_libardour">
  <title>libardour</title>
  <para>
    Items relating to libardour
  </para>

  <table frame='all'>
    <title>libardour TODO Items</title>
    <tgroup cols='8' align='left' colsep='1' rowsep='1'>
      <colspec colname='c1'/>
      <colspec colname='c2'/>
      <colspec colname='c3'/>
      <colspec colname='c4'/>
      <colspec colname='c5'/>
      <colspec colname='c6'/>
      <colspec colname='c7'/>
      <colspec colname='c8'/>
      <thead>
        <row>
          <entry>
            Date
          </entry>

          <entry namest="c2" nameend="c7">
            Task
          </entry>

          <entry>
            Minutes
          </entry>
        </row>
      </thead>
      <tbody>
        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            path tests
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Try to add utf-8 and utf-16/UCS strings to libardour test utils
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            AudioEngine tests
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Test timestretch using different files, lengths etc.
            <ulink url="http://tracker.ardour.org/view.php?id=5923">Crash or
            distortion on timestretch</ulink>
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Session test that programmaticaly creates a session and writes
            it to a directory that contains the arch/platform it was built
            on and the build identifier
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Automatic stress/stability testing of Audioengine/Session paths
            at various buffer sizes, samplerates etc. This will require some
            sort of simultaneous loading of system subsystems etc. perhaps
            via phoronix test integration
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            move session directory names in libs/ardour/directory_names into
            SessionDirectory class
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            AudioBackend destructor has to be implemented?
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            rename ARDOUR::ProcessThread to ARDOUR::ProcessContext
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            correct all header include ifdefs to be C and C++ standards
            compliant
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Rename ARDOUR::init_post_engine and write docs about why it
            needs to be called after audio engine is valid etc.
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            rename libardour/globals.cc, most of the functions in it are
            declared in ardour/ardour.h
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            MidiPatchManager::set_session is called when loading session
            which seems to take a while, is it possible to call this after
            Session is loaded during idle.
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Move ARDOUR::touch_file into PBD::? only used by sfdb which we
            don't use
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Use Serd? instead of lrdf in AudioLibrary?
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Should debug bits be visible outside a library
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Look at using boost::any instead of XMLNode for
            properties/state/etc, reimplement statesystem branch from old
            repo
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Remove now unneccessary AudioSource::find_broken_peakfile
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Decouple AudioBackend from AudioEngine and Session. Is it
            possible to have no dependency on libardour at all? Perhaps with
            AudioBackendListener interface passed to AudioBackend instead of
            AudioEngine. Not sure how to have access to Session, perhaps
            accessed through another interface or via set_data (string name,
            void* data)
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Fix crash in libardour test_playlist_equivalent_regions
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Call AudioFileSource::set_build_peakfiles and
            AudioFileSource::set_build_missing_peakfiles to true in
            ARDOUR::init
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Change Session constructor situation. One constructor for new
            sessions that take folder and name, etc and a second constructor
            that takes a path to the session file for existing sessions.
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Move clock_gettime and get_microseconds from ardour/globals.cc
            to libpbd and test
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Move FPU and denormal stuff to separate C lib?
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Use PBD::get/set_resource_limit in ARDOUR::lotsa_files_please
            and rename it
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Move RuntimeProfile into GUI as it is not used in libardour.
          </entry>

          <entry>
            None
          </entry>
        </row>

        <row>
          <entry>
            None
          </entry>

          <entry namest="c2" nameend="c7">
            Investigate either replacing RuntimeProfile with interface
            options or turning RuntimeProfile into an interface with
            implementations for Ardour, TRX etc.
          </entry>

          <entry>
            None
          </entry>
        </row>
      </tbody>
    </tgroup>
  </table>
</section>
